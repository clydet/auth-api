service: aws-java-maven

provider:
  name: aws
  runtime: java8
  environment:
    USER_POOL_ID: !Ref AuthUserPool
    USER_POOL_RESOURCE_SERVER: !Ref AuthUserPoolResourceServer

region: us-east-1

plugins:
  - serverless-aws-documentation

# you can add packaging information here
package:
  artifact: target/hcqis-auth-dev.jar

custom:
  resourceServer:
    name: auth-${opt:stage}-user-pool-resource-server
    scopes:
      read: read
      write: write
  documentation:
    models:
      -
        name: "Registration"
        description: "This is a registration"
        contentType: "application/json"
        schema:
          type: "object"
          properties:
            clientName:
              type: "string"
      -
        name: "RegistrationError"
        description: "This is an registration error"
        contentType: "application/json"
        schema:
          type: "object"
          properties:
            errorMessage:
              type: "string"
              
functions:
  register:
    handler: org.hcqis.RegistryHandler
    role: lambdaRole
    events:
      - http:
          path: /v1/registration
          method: put
          cors: true
          documentation:
            summary: "Register for an authentication jwt"
            description: "Register for an authentication jwt"
            tags:
              - "Registration"
            requestBody:
              description: "The registry details, namely a user id and an email address where a presigned url will be sent for jwt delivery"
            requestModels:
              "application/json": "Registration"
            methodResponses:
              -
                statusCode: "200"
                responseBody:
                  description: "The registry metadata"
                responseModels:
                  "application/json": "Registration"
              -
                statusCode: "400"
                responseModels:
                  "application/json": "RegistrationError"
  
  sampler:
    handler: org.hcqis.SampleAppHandler
    role: lambdaRole
    events:
      - http:
          path: /v1/sampler
          method: get
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: !Ref authApiGatewayAuthorizer
  
  samplerPost:
    handler: org.hcqis.SampleAppHandler
    role: lambdaRole
    events:
      - http:
          path: /v1/sampler
          method: post
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: !Ref authApiGatewayAuthorizer

resources:
  # IAM
  - ${file(provision/iam-lambda-role.yml)}
  # Cognito
  - ${file(provision/cognito-user-pool.yml)}
  # API Gateway
  - ${file(provision/api-gateway.yml)}
